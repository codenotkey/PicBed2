{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","pages/Register.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","Content","styled","div","Title","h1","Component","observer","AuthStore","useStores","history","useHistory","form","Form","useForm","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","setUsername","username","setPassword","password","register","then","console","log","onFinishFailed","errorInfo","message","error","Item","label","rules","required","validator","rule","test","Promise","reject","resolve","min","max","Password","getFieldValue","style","display","justifyContent","type","htmlType","danger","marginLeft","onClick","resetFields"],"mappings":"wHAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,G,yGIGhGC,EAAUC,IAAOC,IAAV,kUAgBPC,EAAQF,IAAOG,GAAV,mDAILC,EAAYC,aAAS,WACvB,IAAOC,EAAaC,cAAbD,UACDE,EAAUC,cA0BTC,EAAP,EAAeC,IAAKC,UAApB,MAQA,OACI,eAACb,EAAD,WACI,cAACG,EAAD,2BACA,eAAC,IAAD,CAEIW,KAAK,QACLH,KAAMA,EACNI,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpBE,cAAe,CAAEC,UAAU,GAC3BC,SA3CK,SAACC,GACdd,EAAUe,YAAYD,EAAOE,UAC7BhB,EAAUiB,YAAYH,EAAOI,UAC7BlB,EAAUmB,WACLC,MAAK,WACFC,QAAQC,IAAI,kCACZpB,EAAQf,KAAK,QAErBkC,QAAQC,IAAI,WAAYR,IAoChBS,eAjCW,SAACC,GACpBC,IAAQC,MAAM,6BAwBV,UAUI,cAAC,IAAKC,KAAN,CAEIC,MAAM,sBACNrB,KAAK,WACLsB,MAAO,CACH,CAAEC,UAAU,EAAML,QAAS,8CAC3B,CAACM,UAtCI,SAACC,EAAK5C,GAC3B,MAAG,KAAK6C,KAAK7C,GAAe8C,QAAQC,OAAO,wFACpCD,QAAQE,aA8BP,SAWI,cAAC,IAAD,MAGJ,cAAC,IAAKT,KAAN,CACIC,MAAM,gBACNrB,KAAK,WACLsB,MAAO,CACH,CAAEC,UAAU,EAAML,QAAS,wCAC3B,CAACY,IAAI,EAAEZ,QAAQ,mCACf,CAACa,IAAI,GAAGb,QAAQ,qCANxB,SASI,cAAC,IAAMc,SAAP,MAGJ,cAAC,IAAKZ,KAAN,CACIC,MAAM,4BACNrB,KAAK,kBACLsB,MAAO,CAAC,CAAEC,UAAU,EAAML,QAAS,wCAxD3B,SAAC,GAAD,IAAEe,EAAF,EAAEA,cAAF,MAAoB,CACxCT,UADwC,SAC9BC,EAAK5C,GACX,OAAGoD,EAAc,cAAgBpD,EAAc8C,QAAQE,UAChDF,QAAQC,OAAO,kDAkDlB,SAKI,cAAC,IAAMI,SAAP,MAGJ,eAAC,IAAKZ,KAAN,CAAWc,MAAO,CAACC,QAAQ,OAAOC,eAAgB,YAAlD,UACI,cAAC,IAAD,CAAQC,KAAK,UAAUC,SAAS,SAAhC,0BAGA,cAAC,IAAD,CAAQD,KAAK,UAAUE,QAAM,EAAEL,MAAO,CAACM,WAAW,IAC1CC,QAAS,WACL5C,EAAK6C,eAFjB,sCAaHnD","file":"static/js/12.67cd4b02.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\r\nimport {observer} from \"mobx-react\";\r\nimport {useStores} from \"../stores\";\r\nimport {Form, Input,Checkbox,Button,message} from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport {Auth} from \"../model\";\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst Content = styled.div`\r\n  max-width: 600px;\r\n  margin: 10vh auto;\r\n  box-shadow: 0 8px 12px #ebedf0;\r\n  padding: 20px;\r\n  border-radius: 12px;\r\n  border: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  justify-content: flex-end;\r\n\r\n`\r\n\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n`\r\n\r\nconst Component = observer(()=>{\r\n    const {AuthStore} = useStores()\r\n    const history = useHistory()\r\n    const onFinish = (values) => {\r\n        AuthStore.setUsername(values.username)\r\n        AuthStore.setPassword(values.password)\r\n        AuthStore.register()\r\n            .then(()=>{\r\n                console.log('注册成功！');\r\n                history.push('/')\r\n            })\r\n        console.log('Success:', values);\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        message.error('注册失败')\r\n    };\r\n    const validateUsername = (rule,value)=>{\r\n        if(/\\W/.test(value)) return Promise.reject('用户名只可以包含字母和下划线')\r\n        return Promise.resolve()\r\n    }\r\n\r\n    const validateConfirm = ({getFieldValue})=>({\r\n        validator(rule,value){\r\n            if(getFieldValue('password') === value) return Promise.resolve();\r\n            return Promise.reject('两次密码不相同')\r\n        }\r\n    })\r\n    const [form] = Form.useForm();\r\n\r\n    // const style={\r\n    //     display: 'flex',\r\n    //     justifyContent: 'center',\r\n    //     alignItems: 'center',\r\n    //     flexDirection: 'column'\r\n    // }\r\n    return (\r\n        <Content>\r\n            <Title>注册</Title>\r\n            <Form\r\n                // style={style}\r\n                name=\"basic\"\r\n                form={form}\r\n                labelCol={{ span: 8 }}\r\n                wrapperCol={{ span: 16}}\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Form.Item\r\n\r\n                    label=\"用户名:\"\r\n                    name=\"username\"\r\n                    rules={[\r\n                        { required: true, message: '请输入用户名！' },\r\n                        {validator:validateUsername},\r\n                        // {min:4,message:'最小4个字符'},\r\n                        // {min:10,message:'最大10个字符'},\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"密码:\"\r\n                    name=\"password\"\r\n                    rules={[\r\n                        { required: true, message: '请输入密码！' },\r\n                        {min:4,message:'最少4个字符'},\r\n                        {max:10,message:'最多10个字符'}\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"确认密码:\"\r\n                    name=\"confirmPassword\"\r\n                    rules={[{ required: true, message: '请确认密码！' },validateConfirm]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item style={{display:'flex',justifyContent: 'flex-end',}}  >\r\n                    <Button type=\"primary\" htmlType=\"submit\" >\r\n                        注册\r\n                    </Button>\r\n                    <Button type=\"primary\" danger  style={{marginLeft:20}}\r\n                            onClick={() => {\r\n                                form.resetFields();\r\n                            }}\r\n                    >\r\n                        重置\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Content>\r\n    );\r\n})\r\n\r\nexport  default  Component\r\n"],"sourceRoot":""}